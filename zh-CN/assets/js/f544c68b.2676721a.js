"use strict";(self.webpackChunknh_docs=self.webpackChunknh_docs||[]).push([[8091],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return g}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var a=r.createContext({}),p=function(e){var n=r.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(a.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,c=e.originalType,a=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),f=p(t),g=o,m=f["".concat(a,".").concat(g)]||f[g]||s[g]||c;return t?r.createElement(m,l(l({ref:n},u),{},{components:t})):r.createElement(m,l({ref:n},u))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var c=t.length,l=new Array(c);l[0]=f;var i={};for(var a in n)hasOwnProperty.call(n,a)&&(i[a]=n[a]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var p=2;p<c;p++)l[p]=t[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},948:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},metadata:function(){return a},toc:function(){return p},default:function(){return s}});var r=t(22122),o=t(19756),c=(t(67294),t(3905)),l=["components"],i={title:"nhctl get"},a={unversionedId:"cli/cli-get",id:"cli/cli-get",isDocsHomePage:!1,title:"nhctl get",description:"Get resource info",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/cli/cli-get.md",sourceDirName:"cli",slug:"/cli/cli-get",permalink:"/zh-CN/docs/cli/cli-get",editUrl:"https://crowdin.com/project/nocalhost/zh-CN",version:"current",frontMatter:{title:"nhctl get"},sidebar:"docs",previous:{title:"nhctl exec",permalink:"/zh-CN/docs/cli/cli-exec"},next:{title:"nhctl init",permalink:"/zh-CN/docs/cli/cli-init"}},p=[{value:"Usage",id:"usage",children:[]},{value:"Flags",id:"flags",children:[]}],u={toc:p};function s(e){var n=e.components,t=(0,o.Z)(e,l);return(0,c.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,c.kt)("p",null,"Get resource info"),(0,c.kt)("h2",{id:"usage"},"Usage"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"nhctl get type [flags]\n")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"Example:\n\n# Get all application\nnhctl get application --kubeconfig=kubeconfigfile\n\n# Get all application in namespace\nnhctl get application -n namespaceName --kubeconfig=kubeoconfigpath\n\n# Get all deployment of application in namespace\nnhctl get deployment -n namespaceName -a bookinfo --kubeconfig=kubeconfigpath\n")),(0,c.kt)("h2",{id:"flags"},"Flags"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"Flags:\n  -a, --application string        application name\n  -h, --help                      help for get\n  -o, --outputType string         json or yaml\n  -l, --selector stringToString   Selector (label query) to filter on, only supports '='.(e.g. -l key1=value1,key2=value2) (default [])\n\nGlobal Flags:\n      --debug               enable debug level log\n      --kubeconfig string   the path of the kubeconfig file\n  -n, --namespace string    kubernetes namespace\n")))}s.isMDXComponent=!0}}]);