"use strict";(self.webpackChunknh_docs=self.webpackChunknh_docs||[]).push([[795],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return f}});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var a=r.createContext({}),p=function(e){var n=r.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(a.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,a=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=p(t),f=i,m=d["".concat(a,".").concat(f)]||d[f]||u[f]||o;return t?r.createElement(m,l(l({ref:n},s),{},{components:t})):r.createElement(m,l({ref:n},s))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,l=new Array(o);l[0]=d;var c={};for(var a in n)hasOwnProperty.call(n,a)&&(c[a]=n[a]);c.originalType=e,c.mdxType="string"==typeof e?e:i,l[1]=c;for(var p=2;p<o;p++)l[p]=t[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},48741:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},metadata:function(){return a},toc:function(){return p},default:function(){return u}});var r=t(22122),i=t(19756),o=(t(67294),t(3905)),l=["components"],c={title:"nhctl init"},a={unversionedId:"cli/cli-init",id:"cli/cli-init",isDocsHomePage:!1,title:"nhctl init",description:"Init demo or dep component",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/cli/cli-init.md",sourceDirName:"cli",slug:"/cli/cli-init",permalink:"/zh-CN/docs/cli/cli-init",editUrl:"https://crowdin.com/project/nocalhost/zh-CN",version:"current",frontMatter:{title:"nhctl init"},sidebar:"docs",previous:{title:"nhctl get",permalink:"/zh-CN/docs/cli/cli-get"},next:{title:"nhctl install",permalink:"/zh-CN/docs/cli/cli-install"}},p=[{value:"nhctl init demo",id:"nhctl-init-demo",children:[{value:"Usage",id:"usage",children:[]},{value:"Flags",id:"flags",children:[]}]},{value:"nhctl init dep",id:"nhctl-init-dep",children:[{value:"Usage",id:"usage-1",children:[]},{value:"Flags",id:"flags-1",children:[]}]}],s={toc:p};function u(e){var n=e.components,t=(0,i.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Init demo or dep component"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Usage:\n  nhctl init [command]\n\nAvailable Commands:\n  demo        Init Nocalhost with demo mode\n  dep         dep component\n")),(0,o.kt)("h2",{id:"nhctl-init-demo"},"nhctl init demo"),(0,o.kt)("p",null,"Init api, web and dep component in cluster"),(0,o.kt)("h3",{id:"usage"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"nhctl init demo [flags]\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Example:\n\nnhctl init demo -n [DevSpace Name] -t nodeport -p [port]\nnhctl init demo -n [DevSpace Name]\n")),(0,o.kt)("h3",{id:"flags"},"Flags"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Flags:\n      --force                         force to init, warning: it will remove all nocalhost old data\n  -h, --help                          help for demo\n      --inject-user-amount int        inject user amount, example 10, max is 999\n      --inject-user-offset int        inject user id offset, default is 1 (default 1)\n      --inject-user-template string   inject users template, example Techo%d, max length is 15\n  -p, --port int                      for NodePort usage set ports (default 80)\n      --set strings                   set values of helm\n  -s, --source string                 (Deprecated) bookinfo source, github or coding, default is github\n  -t, --type string                   set NodePort or LoadBalancer to expose nocalhost service\n\nGlobal Flags:\n      --debug               enable debug level log\n      --kubeconfig string   the path of the kubeconfig file\n  -n, --namespace string    kubernetes namespace\n")),(0,o.kt)("h2",{id:"nhctl-init-dep"},"nhctl init dep"),(0,o.kt)("p",null,"Nocalhost\uff08nocalhost-dep\uff09\u7ec4\u4ef6\u521d\u59cb\u5316"),(0,o.kt)("h3",{id:"usage-1"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"nhctl init dep [flags]\n")),(0,o.kt)("h3",{id:"flags-1"},"Flags"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Flags:\n  -h, --help   help for dep\n\nGlobal Flags:\n      --debug               enable debug level log\n      --kubeconfig string   the path of the kubeconfig file\n  -n, --namespace string    kubernetes namespace\n")))}u.isMDXComponent=!0}}]);