"use strict";(self.webpackChunknh_docs=self.webpackChunknh_docs||[]).push([[2799],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),d=s(n),m=i,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(f,l(l({ref:t},p),{},{components:n})):r.createElement(f,l({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,l=new Array(o);l[0]=d;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:i,l[1]=a;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},81564:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return a},metadata:function(){return c},toc:function(){return s},default:function(){return u}});var r=n(22122),i=n(19756),o=(n(67294),n(3905)),l=["components"],a={title:"nhctl init"},c={unversionedId:"cli/cli-init",id:"cli/cli-init",isDocsHomePage:!1,title:"nhctl init",description:"Init demo or dep component",source:"@site/docs/cli/cli-init.md",sourceDirName:"cli",slug:"/cli/cli-init",permalink:"/docs/cli/cli-init",editUrl:"https://github.com/nocalhost/nocalhost.github.io/tree/main/docs/cli/cli-init.md",version:"current",lastUpdatedBy:"Qi Zhang",lastUpdatedAt:1654589270,formattedLastUpdatedAt:"6/7/2022",frontMatter:{title:"nhctl init"},sidebar:"docs",previous:{title:"nhctl get",permalink:"/docs/cli/cli-get"},next:{title:"nhctl install",permalink:"/docs/cli/cli-install"}},s=[{value:"nhctl init demo",id:"nhctl-init-demo",children:[{value:"Usage",id:"usage",children:[]},{value:"Flags",id:"flags",children:[]}]},{value:"nhctl init dep",id:"nhctl-init-dep",children:[{value:"Usage",id:"usage-1",children:[]},{value:"Flags",id:"flags-1",children:[]}]}],p={toc:s};function u(e){var t=e.components,n=(0,i.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Init demo or dep component"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Usage:\n  nhctl init [command]\n\nAvailable Commands:\n  demo        Init Nocalhost with demo mode\n  dep         dep component\n")),(0,o.kt)("h2",{id:"nhctl-init-demo"},"nhctl init demo"),(0,o.kt)("p",null,"Init api, web and dep component in cluster"),(0,o.kt)("h3",{id:"usage"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"nhctl init demo [flags]\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Example:\n\nnhctl init demo -n [DevSpace Name] -t nodeport -p [port]\nnhctl init demo -n [DevSpace Name]\n")),(0,o.kt)("h3",{id:"flags"},"Flags"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Flags:\n      --force                         force to init, warning: it will remove all nocalhost old data\n  -h, --help                          help for demo\n      --inject-user-amount int        inject user amount, example 10, max is 999\n      --inject-user-offset int        inject user id offset, default is 1 (default 1)\n      --inject-user-template string   inject users template, example Techo%d, max length is 15\n  -p, --port int                      for NodePort usage set ports (default 80)\n      --set strings                   set values of helm\n  -s, --source string                 (Deprecated) bookinfo source, github or coding, default is github\n  -t, --type string                   set NodePort or LoadBalancer to expose nocalhost service\n\nGlobal Flags:\n      --debug               enable debug level log\n      --kubeconfig string   the path of the kubeconfig file\n  -n, --namespace string    kubernetes namespace\n")),(0,o.kt)("h2",{id:"nhctl-init-dep"},"nhctl init dep"),(0,o.kt)("p",null,"Nocalhost\uff08nocalhost-dep\uff09\u7ec4\u4ef6\u521d\u59cb\u5316"),(0,o.kt)("h3",{id:"usage-1"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"nhctl init dep [flags]\n")),(0,o.kt)("h3",{id:"flags-1"},"Flags"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Flags:\n  -h, --help   help for dep\n\nGlobal Flags:\n      --debug               enable debug level log\n      --kubeconfig string   the path of the kubeconfig file\n  -n, --namespace string    kubernetes namespace\n")))}u.isMDXComponent=!0}}]);