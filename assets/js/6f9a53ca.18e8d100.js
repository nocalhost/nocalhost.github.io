"use strict";(self.webpackChunknh_docs=self.webpackChunknh_docs||[]).push([[3895],{3905:function(e,t,n){n.d(t,{Zo:function(){return f},kt:function(){return d}});var r=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},f=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,o=e.originalType,c=e.parentName,f=a(e,["components","mdxType","originalType","parentName"]),u=p(n),d=l,g=u["".concat(c,".").concat(d)]||u[d]||s[d]||o;return n?r.createElement(g,i(i({ref:t},f),{},{components:n})):r.createElement(g,i({ref:t},f))}));function d(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=n.length,i=new Array(o);i[0]=u;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:l,i[1]=a;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1899:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return a},metadata:function(){return c},toc:function(){return p},default:function(){return s}});var r=n(22122),l=n(19756),o=(n(67294),n(3905)),i=["components"],a={title:"nhctl profile"},c={unversionedId:"cli/cli-profile",id:"cli/cli-profile",isDocsHomePage:!1,title:"nhctl profile",description:"Profile Management",source:"@site/docs/cli/cli-profile.md",sourceDirName:"cli",slug:"/cli/cli-profile",permalink:"/docs/cli/cli-profile",editUrl:"https://github.com/nocalhost/nocalhost.github.io/tree/main/docs/cli/cli-profile.md",version:"current",lastUpdatedBy:"Qi Zhang",lastUpdatedAt:1657695850,formattedLastUpdatedAt:"7/13/2022",frontMatter:{title:"nhctl profile"},sidebar:"docs",previous:{title:"nhctl port-forward",permalink:"/docs/cli/cli-port-forward"},next:{title:"nhctl pvc",permalink:"/docs/cli/cli-pvc"}},p=[{value:"nhctl profile get",id:"nhctl-profile-get",children:[{value:"Usage",id:"usage",children:[]},{value:"Flags",id:"flags",children:[]}]},{value:"nhctl profile set",id:"nhctl-profile-set",children:[{value:"Usage",id:"usage-1",children:[]},{value:"Flags",id:"flags-1",children:[]}]}],f={toc:p};function s(e){var t=e.components,n=(0,l.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Profile Management"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Usage:\n  nhctl profile [command]\n\nAvailable Commands:\n  get         Get a config item of Profile\n  set         Set a config item of Profile\n")),(0,o.kt)("h2",{id:"nhctl-profile-get"},"nhctl profile get"),(0,o.kt)("p",null,"Get a config item of Profile"),(0,o.kt)("h3",{id:"usage"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"nhctl profile get [flags]\n")),(0,o.kt)("h3",{id:"flags"},"Flags"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'Flags:\n  -c, --container string    container name of pod\n  -d, --deployment string   k8s workload name\n  -h, --help                help for get\n  -k, --key string          key of dev config\n  -t, --type string         specify service type (default "deployment")\n\nGlobal Flags:\n      --debug               enable debug level log\n      --kubeconfig string   the path of the kubeconfig file\n  -n, --namespace string    kubernetes namespace\n')),(0,o.kt)("h2",{id:"nhctl-profile-set"},"nhctl profile set"),(0,o.kt)("p",null,"Set a config item of Profile"),(0,o.kt)("h3",{id:"usage-1"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"nhctl profile set [flags]\n")),(0,o.kt)("h3",{id:"flags-1"},"Flags"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'Flags:\n  -c, --container string    container name of pod\n  -d, --deployment string   k8s workload name\n  -h, --help                help for set\n  -k, --key string          key of dev config\n  -t, --type string         specify service type (default "deployment")\n  -v, --value string        value of dev config\n\nGlobal Flags:\n      --debug               enable debug level log\n      --kubeconfig string   the path of the kubeconfig file\n  -n, --namespace string    kubernetes namespace\n')))}s.isMDXComponent=!0}}]);